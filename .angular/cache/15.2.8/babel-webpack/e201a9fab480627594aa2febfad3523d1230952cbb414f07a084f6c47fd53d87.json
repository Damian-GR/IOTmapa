{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction TablaCoordComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const coord_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(coord_r1.longitud);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(coord_r1.latitud);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(coord_r1.hora);\n  }\n}\nexport class TablaCoordComponent {\n  constructor(http) {\n    this.http = http;\n    this.ListCoor = [];\n    this.loadCoor();\n  }\n  loadCoor() {\n    const interval = setInterval(() => {\n      this.http.get('https://api.thingspeak.com/channels/2193277/feeds.json?api_key=ZFT84U02EQH0DUTH').subscribe(res => {\n        //variable para guardar la conversion de datos json a string\n        const listString = res.feeds;\n        //concatena los datos que se reciben uno a uno en listString en el arreglo ListCoor\n        var i = 0;\n        listString.forEach(element => {\n          var coord = {\n            id: element.entry_id.toString(),\n            latitud: element.field3,\n            longitud: element.field1,\n            hora: element.field4\n          };\n          i++;\n          this.ListCoor.push(coord);\n          console.log(element);\n          console.log(coord);\n        });\n      }, e => {\n        console.log('ERROR: ' + e);\n      });\n    }, 5000); // Intervalo de 5000 ms = 5 segundos\n  }\n\n  reload() {\n    window.location.reload();\n  }\n}\nTablaCoordComponent.ɵfac = function TablaCoordComponent_Factory(t) {\n  return new (t || TablaCoordComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nTablaCoordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TablaCoordComponent,\n  selectors: [[\"app-tabla-coord\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[1, \"contenedor\"], [1, \"table\", \"table-light\", \"table-striped\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"boton\"], [\"type\", \"button\", \"value\", \"Actualizar\", 1, \"boton\", 3, \"click\"]],\n  template: function TablaCoordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n      i0.ɵɵtext(5, \"Longitud\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 2);\n      i0.ɵɵtext(7, \"Latitud\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"Hora\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"tbody\");\n      i0.ɵɵtemplate(11, TablaCoordComponent_tr_11_Template, 7, 3, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"input\", 5);\n      i0.ɵɵlistener(\"click\", function TablaCoordComponent_Template_input_click_13_listener() {\n        return ctx.reload();\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ListCoor);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"@import url(https://unpkg.com/leaflet@1.9.3/dist/leaflet.css);@import url(https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css);table[_ngcontent-%COMP%]{\\r\\n    width: 30vw;\\r\\n    background-color: crimson;\\r\\n    border-collapse:separate;\\r\\n    border-spacing: 10;\\r\\n    border:solid black 1px;\\r\\n    border-radius:10px;\\r\\n    -moz-border-radius:10px;\\r\\n    -webkit-border-radius: 5px; \\r\\n}\\r\\n\\r\\n.contenedor[_ngcontent-%COMP%] {\\r\\n    width: 600px;\\r\\n}\\r\\n\\r\\n.boton[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.map[_ngcontent-%COMP%] {\\r\\n    height: 540px;\\r\\n    box-shadow: 5px 5px 5px #888;\\r\\n}\\r\\n\\r\\n.map.visible[_ngcontent-%COMP%] {\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%] {\\r\\n    margin: 15px;\\r\\n}\\r\\n\\r\\ninput.boton[_ngcontent-%COMP%]{\\r\\n    font-size: 25px;\\r\\n    width: 10vw;\\r\\n    height: 5vh;\\r\\n    color: whitesmoke;\\r\\n    border: 2px;\\r\\n    border-radius: 10px;\\r\\n    border-color: crimson;\\r\\n    border-style: dashed;\\r\\n    background-color: cornflowerblue;\\r\\n\\r\\n}\\r\\n\\r\\ninput.boton[_ngcontent-%COMP%]:hover{\\r\\n    border-color: cornflowerblue;\\r\\n    border-style: dashed;\\r\\n    background-color: crimson;\\r\\n\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFibGEtY29vcmQvdGFibGEtY29vcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtJQUNJLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIsd0JBQXdCO0lBQ3hCLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2QiwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixXQUFXO0lBQ1gsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQixvQkFBb0I7SUFDcEIsZ0NBQWdDOztBQUVwQzs7QUFFQTtJQUNJLDRCQUE0QjtJQUM1QixvQkFBb0I7SUFDcEIseUJBQXlCOztBQUU3QiIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly91bnBrZy5jb20vbGVhZmxldEAxLjkuMy9kaXN0L2xlYWZsZXQuY3NzXCIpO1xyXG5AaW1wb3J0IHVybChcImh0dHBzOi8vdW5wa2cuY29tL2xlYWZsZXQtcm91dGluZy1tYWNoaW5lQGxhdGVzdC9kaXN0L2xlYWZsZXQtcm91dGluZy1tYWNoaW5lLmNzc1wiKTtcclxuXHJcbnRhYmxle1xyXG4gICAgd2lkdGg6IDMwdnc7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjcmltc29uO1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOnNlcGFyYXRlO1xyXG4gICAgYm9yZGVyLXNwYWNpbmc6IDEwO1xyXG4gICAgYm9yZGVyOnNvbGlkIGJsYWNrIDFweDtcclxuICAgIGJvcmRlci1yYWRpdXM6MTBweDtcclxuICAgIC1tb3otYm9yZGVyLXJhZGl1czoxMHB4O1xyXG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1cHg7IFxyXG59XHJcblxyXG4uY29udGVuZWRvciB7XHJcbiAgICB3aWR0aDogNjAwcHg7XHJcbn1cclxuXHJcbi5ib3RvbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4ubWFwIHtcclxuICAgIGhlaWdodDogNTQwcHg7XHJcbiAgICBib3gtc2hhZG93OiA1cHggNXB4IDVweCAjODg4O1xyXG59XHJcblxyXG4ubWFwLnZpc2libGUge1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuLmJ0biB7XHJcbiAgICBtYXJnaW46IDE1cHg7XHJcbn1cclxuXHJcbmlucHV0LmJvdG9ue1xyXG4gICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgd2lkdGg6IDEwdnc7XHJcbiAgICBoZWlnaHQ6IDV2aDtcclxuICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG4gICAgYm9yZGVyOiAycHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYm9yZGVyLWNvbG9yOiBjcmltc29uO1xyXG4gICAgYm9yZGVyLXN0eWxlOiBkYXNoZWQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb3JuZmxvd2VyYmx1ZTtcclxuXHJcbn1cclxuXHJcbmlucHV0LmJvdG9uOmhvdmVye1xyXG4gICAgYm9yZGVyLWNvbG9yOiBjb3JuZmxvd2VyYmx1ZTtcclxuICAgIGJvcmRlci1zdHlsZTogZGFzaGVkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogY3JpbXNvbjtcclxuXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAUMA,0BAAmC;IAC7BA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;;;;IAFnBA,eAAkB;IAAlBA,uCAAkB;IAClBA,eAAiB;IAAjBA,sCAAiB;IACjBA,eAAc;IAAdA,mCAAc;;;ACF1B,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,aAAQ,GAAkB,EAAE;IAG1B,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEOA,QAAQ;IACb,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAK;MAClC,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,iFAAiF,CAAC,CAACC,SAAS,CACnHC,GAAG,IAAI;QACN;QACA,MAAMC,UAAU,GAAGD,GAAG,CAACE,KAAK;QAC5B;QACA,IAAIC,CAAC,GAAG,CAAC;QACTF,UAAU,CAACG,OAAO,CAAEC,OAAO,IAAI;UAC7B,IAAIC,KAAK,GAAe;YACtBC,EAAE,EAAGF,OAAO,CAACG,QAAQ,CAACC,QAAQ,EAAE;YAChCC,OAAO,EAAGL,OAAO,CAACM,MAAM;YACxBC,QAAQ,EAAGP,OAAO,CAACQ,MAAM;YACzBC,IAAI,EAAGT,OAAO,CAACU;WAChB;UACDZ,CAAC,EAAE;UACH,IAAI,CAACa,QAAQ,CAACC,IAAI,CAACX,KAAK,CAAC;UACzBY,OAAO,CAACC,GAAG,CAACd,OAAO,CAAC;UACpBa,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;QACpB,CAAC,CAAC;MACJ,CAAC,EACAc,CAAC,IAAI;QACJF,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,CAAC,CAAC;MAC5B,CAAC,CACF;IACD,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ;;EAEAC,MAAM;IACJC,MAAM,CAACC,QAAQ,CAACF,MAAM,EAAE;EAC1B;;AArCW7B,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAgC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXhCrC,8BAAwB;MAICA,wBAAQ;MAAAA,iBAAK;MAC9BA,6BAAgB;MAAAA,uBAAO;MAAAA,iBAAK;MAC5BA,6BAAgB;MAAAA,oBAAI;MAAAA,iBAAK;MAG7BA,8BAAO;MACLA,oEAIK;MACPA,iBAAQ;MAEZA,+BAAmB;MACIA;QAAA,OAASsC,YAAQ;MAAA,EAAC;MAAvCtC,iBAAyE;;;MAR/CA,gBAAW;MAAXA,sCAAW","names":["i0","TablaCoordComponent","constructor","http","loadCoor","interval","setInterval","get","subscribe","res","listString","feeds","i","forEach","element","coord","id","entry_id","toString","latitud","field3","longitud","field1","hora","field4","ListCoor","push","console","log","e","reload","window","location","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Sebastian\\Desktop\\New folder\\servidorMapa\\src\\app\\tabla-coord\\tabla-coord.component.html","C:\\Users\\Sebastian\\Desktop\\New folder\\servidorMapa\\src\\app\\tabla-coord\\tabla-coord.component.ts"],"sourcesContent":["<div class=\"contenedor\">\r\n  <table class=\"table table-light table-striped\">\r\n    <thead>\r\n      <tr>       \r\n        <th scope=\"col\" >Longitud</th>\r\n        <th scope=\"col\">Latitud</th>\r\n        <th scope=\"col\">Hora</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let coord of ListCoor\">       \r\n        <td>{{coord.longitud}}</td>\r\n        <td>{{coord.latitud}}</td>\r\n        <td>{{coord.hora}}</td>\r\n      </tr>   \r\n    </tbody>\r\n</table>\r\n<div class=\"boton\">\r\n  <input type=\"button\" (click)=\"reload()\" value=\"Actualizar\" class=\"boton\">\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { DatabaseService } from '../api/database.service';\r\nimport { Coordenadas } from '../interfaces/coordenadas';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Thingspeak } from '../interfaces/thingspeak';\r\n\r\n@Component({\r\n  selector: 'app-tabla-coord',\r\n  templateUrl: './tabla-coord.component.html',\r\n  styleUrls: ['./tabla-coord.component.css']\r\n})\r\nexport class TablaCoordComponent {\r\n  ListCoor: Coordenadas[] = [];\r\n  \r\n  constructor(private http: HttpClient) {\r\n    this.loadCoor();\r\n  }\r\n\r\n  public loadCoor(): void{\r\n    const interval = setInterval(() => {\r\n    this.http.get<Thingspeak>('https://api.thingspeak.com/channels/2193277/feeds.json?api_key=ZFT84U02EQH0DUTH').subscribe(\r\n      (res) => {\r\n        //variable para guardar la conversion de datos json a string\r\n        const listString = res.feeds;\r\n        //concatena los datos que se reciben uno a uno en listString en el arreglo ListCoor\r\n        var i = 0;\r\n        listString.forEach((element) => {\r\n          var coord:Coordenadas = {\r\n            id : element.entry_id.toString(),\r\n            latitud : element.field3,\r\n            longitud : element.field1,\r\n            hora : element.field4\r\n          };\r\n          i++;\r\n          this.ListCoor.push(coord);\r\n          console.log(element); \r\n          console.log(coord);\r\n        });\r\n      },\r\n      (e) => {\r\n        console.log('ERROR: ' + e);\r\n      }\r\n    );\r\n    }, 5000); // Intervalo de 5000 ms = 5 segundos\r\n  }\r\n\r\n  reload(){\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}