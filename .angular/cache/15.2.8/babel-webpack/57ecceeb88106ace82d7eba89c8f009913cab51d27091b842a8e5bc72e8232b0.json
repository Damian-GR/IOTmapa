{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/database.service\";\nimport * as i2 from \"@angular/common\";\nfunction TablaCoordComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const coord_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(coord_r1.longitud);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(coord_r1.latitud);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(coord_r1.hora);\n  }\n}\nexport let TablaCoordComponent = /*#__PURE__*/(() => {\n  class TablaCoordComponent {\n    constructor(dbService) {\n      this.dbService = dbService;\n      this.ListCoor = [];\n      this.loadCoor();\n    }\n    loadCoor() {\n      this.dbService.getCoor().subscribe(res => {\n        //variable para guardar la conversion de datos json a string\n        const listString = JSON.stringify(res);\n        //concatena los datos que se reciben uno a uno en listString en el arreglo ListCoor\n        this.ListCoor = JSON.parse(listString);\n      }, e => {\n        console.log('ERROR: ' + e);\n      });\n    }\n    reload() {\n      window.location.reload();\n    }\n  }\n  TablaCoordComponent.ɵfac = function TablaCoordComponent_Factory(t) {\n    return new (t || TablaCoordComponent)(i0.ɵɵdirectiveInject(i1.DatabaseService));\n  };\n  TablaCoordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TablaCoordComponent,\n    selectors: [[\"app-tabla-coord\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[1, \"contenedor\"], [1, \"table\", \"table-light\", \"table-striped\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"boton\"], [\"type\", \"button\", \"value\", \"Actualizar\", 1, \"boton\", 3, \"click\"]],\n    template: function TablaCoordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n        i0.ɵɵtext(5, \"Longitud\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\", 2);\n        i0.ɵɵtext(7, \"Latitud\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\", 2);\n        i0.ɵɵtext(9, \"Hora\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"tbody\");\n        i0.ɵɵtemplate(11, TablaCoordComponent_tr_11_Template, 7, 3, \"tr\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"input\", 5);\n        i0.ɵɵlistener(\"click\", function TablaCoordComponent_Template_input_click_13_listener() {\n          return ctx.reload();\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ListCoor);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\"@import\\\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.css\\\";@import\\\"https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css\\\";table[_ngcontent-%COMP%]{width:30vw;background-color:#dc143c;border-collapse:separate;border-spacing:10;border:solid black 1px;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius:5px}.contenedor[_ngcontent-%COMP%]{width:600px}.boton[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.map[_ngcontent-%COMP%]{height:540px;box-shadow:5px 5px 5px #888}.map.visible[_ngcontent-%COMP%]{opacity:1}.btn[_ngcontent-%COMP%]{margin:15px}input.boton[_ngcontent-%COMP%]{font-size:25px;width:10vw;height:5vh;color:#f5f5f5;border:2px;border-radius:10px;border-color:#dc143c;border-style:dashed;background-color:#6495ed}input.boton[_ngcontent-%COMP%]:hover{border-color:#6495ed;border-style:dashed;background-color:#dc143c}\"]\n  });\n  return TablaCoordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}