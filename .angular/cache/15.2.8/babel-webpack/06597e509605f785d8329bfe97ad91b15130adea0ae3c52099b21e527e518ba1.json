{"ast":null,"code":"import * as L from 'leaflet';\nimport 'leaflet-routing-machine';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MapApiComponent {\n  constructor(renderer, http) {\n    this.renderer = renderer;\n    this.http = http;\n    this.ListCoor = [];\n    this.center = [21.910941, -102.316465];\n    this.loadCoor();\n  }\n  ngOnInit() {}\n  ngOnDestroy() {\n    this.mapRef.off('click');\n  }\n  cargaTabla() {\n    const mapDiv = document.getElementById('map');\n    const map = L.map(mapDiv).setView(this.center, 16);\n    this.mapRef = map;\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n      maxZoom: 19\n    }).addTo(map);\n    this.renderer.addClass(mapDiv, 'visible');\n    const resizeObserver = new ResizeObserver(() => {\n      map.invalidateSize();\n    });\n    resizeObserver.observe(mapDiv);\n    //Array con coordenadas    \n    var latlngs = [];\n    //Código para el Leaflet Routing Machine para mostrar la línea de ruta\n    const planOptions = {\n      addWaypoints: false,\n      draggableWaypoints: false\n    };\n    const plan = new L.Routing.Plan(latlngs, planOptions);\n    const control = L.Routing.control({\n      plan,\n      addWaypoints: false,\n      routeWhileDragging: false\n    }).addTo(map);\n    //divide el array\n    for (var i = 0; i < this.ListCoor.length; i++) {\n      console.log(\"Entra for\");\n      var objCoorde = this.ListCoor[i];\n      var lati = parseFloat(objCoorde.latitud);\n      var longi = parseFloat(objCoorde.longitud);\n      var num = parseFloat(objCoorde.id);\n      if (num == 1) {\n        L.marker([longi, lati]).addTo(map).bindPopup(\"Punto \" + num).openPopup();\n      }\n      latlngs.push([longi, lati]);\n    }\n    control.setWaypoints(latlngs); //Establece los puntos en el mapa\n    control.hide();\n  }\n  loadCoor() {\n    this.http.get('https://api.thingspeak.com/channels/2193277/feeds.json?api_key=ZFT84U02EQH0DUTH').subscribe(res => {\n      console.log(res);\n      //variable para guardar la conversion de datos json a string\n      const listString = res.feeds;\n      //concatena los datos que se reciben uno a uno en listString en el arreglo ListCoor\n      var i = 0;\n      listString.forEach(element => {\n        var coord = {\n          id: element.entry_id.toString(),\n          latitud: element.field3,\n          longitud: element.field1,\n          hora: element.field4\n        };\n        i++;\n        this.ListCoor.push(coord);\n        console.log(element);\n        console.log(coord);\n      });\n      console.log(this.ListCoor);\n    }, e => {\n      console.log('ERROR: ' + e);\n    });\n  }\n}\nMapApiComponent.ɵfac = function MapApiComponent_Factory(t) {\n  return new (t || MapApiComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nMapApiComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapApiComponent,\n  selectors: [[\"app-map-api\"]],\n  inputs: {\n    center: \"center\"\n  },\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"contenedor\"], [\"id\", \"map\", 1, \"map\", 3, \"click\"], [\"map\", \"\"]],\n  template: function MapApiComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1, 2);\n      i0.ɵɵlistener(\"click\", function MapApiComponent_Template_div_click_1_listener() {\n        return ctx.cargaTabla();\n      });\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"@import url(https://unpkg.com/leaflet@1.9.3/dist/leaflet.css);@import url(https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css);.contenedor[_ngcontent-%COMP%] {\\r\\n    margin-top: 20px;\\r\\n    width: 65vw;\\r\\n}\\r\\n\\r\\n.map[_ngcontent-%COMP%] {\\r\\n    height: 95vh;\\r\\n    box-shadow: 5px 5px 5px #888;\\r\\n    border: 5px goldenrod;\\r\\n    background-color: cornsilk;\\r\\n    border-style: dashed;\\r\\n}\\r\\n\\r\\n.map.visible[_ngcontent-%COMP%] {\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%] {\\r\\n    margin: 15px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWFwLWFwaS9tYXAtYXBpLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7SUFDSSxnQkFBZ0I7SUFDaEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDRCQUE0QjtJQUM1QixxQkFBcUI7SUFDckIsMEJBQTBCO0lBQzFCLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IHVybChcImh0dHBzOi8vdW5wa2cuY29tL2xlYWZsZXRAMS45LjMvZGlzdC9sZWFmbGV0LmNzc1wiKTtcclxuQGltcG9ydCB1cmwoXCJodHRwczovL3VucGtnLmNvbS9sZWFmbGV0LXJvdXRpbmctbWFjaGluZUBsYXRlc3QvZGlzdC9sZWFmbGV0LXJvdXRpbmctbWFjaGluZS5jc3NcIik7XHJcblxyXG4uY29udGVuZWRvciB7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbn1cclxuXHJcbi5tYXAge1xyXG4gICAgaGVpZ2h0OiA5NXZoO1xyXG4gICAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggIzg4ODtcclxuICAgIGJvcmRlcjogNXB4IGdvbGRlbnJvZDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGNvcm5zaWxrO1xyXG4gICAgYm9yZGVyLXN0eWxlOiBkYXNoZWQ7XHJcbn1cclxuXHJcbi5tYXAudmlzaWJsZSB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcblxyXG4uYnRuIHtcclxuICAgIG1hcmdpbjogMTVweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,OAAO,KAAKA,CAAC,MAAM,SAAS;AAC5B,OAAO,yBAAyB;;;AAWhC,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,QAAmB,EAAUC,IAAgB;IAA7C,aAAQ,GAARD,QAAQ;IAAqB,SAAI,GAAJC,IAAI;IAJrD,aAAQ,GAAkB,EAAE;IACnB,WAAM,GAAwB,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;IAI7D,IAAI,CAACC,QAAQ,EAAE;EACjB;EACAC,QAAQ,IACR;EAEAC,WAAW;IACT,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,OAAO,CAAC;EAC1B;EAGAC,UAAU;IACR,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAgB;IAC5D,MAAMC,GAAG,GAAGd,CAAC,CAACc,GAAG,CAACH,MAAM,CAAC,CAACI,OAAO,CAAC,IAAI,CAACC,MAAM,EAAE,EAAE,CAAC;IAClD,IAAI,CAACR,MAAM,GAAGM,GAAG;IACjBd,CAAC,CAACiB,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE,2EAA2E;MACxFC,OAAO,EAAE;KACV,CAAC,CAACC,KAAK,CAACN,GAAG,CAAC;IAEb,IAAI,CAACX,QAAQ,CAACkB,QAAQ,CAACV,MAAM,EAAE,SAAS,CAAC;IAEzC,MAAMW,cAAc,GAAG,IAAIC,cAAc,CAAC,MAAK;MAC7CT,GAAG,CAACU,cAAc,EAAE;IACtB,CAAC,CAAC;IACFF,cAAc,CAACG,OAAO,CAACd,MAAM,CAAC;IAE9B;IACA,IAAIe,OAAO,GAAQ,EAAE;IAErB;IACA,MAAMC,WAAW,GAAG;MAClBC,YAAY,EAAE,KAAK;MACnBC,kBAAkB,EAAE;KACrB;IAED,MAAMC,IAAI,GAAG,IAAI9B,CAAC,CAAC+B,OAAO,CAACC,IAAI,CAACN,OAAO,EAAEC,WAAW,CAAC;IAErD,MAAMM,OAAO,GAAGjC,CAAC,CAAC+B,OAAO,CAACE,OAAO,CAAC;MAChCH,IAAI;MACJF,YAAY,EAAE,KAAK;MACnBM,kBAAkB,EAAE;KACrB,CAAC,CAACd,KAAK,CAACN,GAAG,CAAC;IAEb;IACA,KAAK,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,QAAQ,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAC7CG,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAExB,IAAIC,SAAS,GAAG,IAAI,CAACJ,QAAQ,CAACD,CAAC,CAAC;MAChC,IAAIM,IAAI,GAAGC,UAAU,CAACF,SAAS,CAACG,OAAO,CAAC;MACxC,IAAIC,KAAK,GAAGF,UAAU,CAACF,SAAS,CAACK,QAAQ,CAAC;MAC1C,IAAIC,GAAG,GAAGJ,UAAU,CAACF,SAAS,CAACO,EAAE,CAAC;MAElC,IAAGD,GAAG,IAAE,CAAC,EAAC;QACR9C,CAAC,CAACgD,MAAM,CAAC,CAACJ,KAAK,EAAEH,IAAI,CAAC,CAAC,CAACrB,KAAK,CAACN,GAAG,CAAC,CAACmC,SAAS,CAAC,QAAQ,GAAGH,GAAG,CAAC,CAACI,SAAS,EAAE;;MAE1ExB,OAAO,CAACyB,IAAI,CAAC,CAACP,KAAK,EAACH,IAAI,CAAC,CAAC;;IAG5BR,OAAO,CAACmB,YAAY,CAAC1B,OAAO,CAAC,CAAC,CAAC;IAC/BO,OAAO,CAACoB,IAAI,EAAE;EAChB;EAEOhD,QAAQ;IACb,IAAI,CAACD,IAAI,CAACkD,GAAG,CAAa,iFAAiF,CAAC,CAACC,SAAS,CACnHC,GAAG,IAAI;MACNlB,OAAO,CAACC,GAAG,CAACiB,GAAG,CAAC;MAChB;MACA,MAAMC,UAAU,GAAGD,GAAG,CAACE,KAAK;MAC5B;MACA,IAAIvB,CAAC,GAAG,CAAC;MACTsB,UAAU,CAACE,OAAO,CAAEC,OAAO,IAAI;QAC7B,IAAIC,KAAK,GAAe;UACtBd,EAAE,EAAGa,OAAO,CAACE,QAAQ,CAACC,QAAQ,EAAE;UAChCpB,OAAO,EAAGiB,OAAO,CAACI,MAAM;UACxBnB,QAAQ,EAAGe,OAAO,CAACK,MAAM;UACzBC,IAAI,EAAGN,OAAO,CAACO;SAChB;QACDhC,CAAC,EAAE;QACH,IAAI,CAACC,QAAQ,CAACe,IAAI,CAACU,KAAK,CAAC;QACzBvB,OAAO,CAACC,GAAG,CAACqB,OAAO,CAAC;QACpBtB,OAAO,CAACC,GAAG,CAACsB,KAAK,CAAC;MACpB,CAAC,CAAC;MACFvB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,QAAQ,CAAC;IAC5B,CAAC,EACAgC,CAAC,IAAI;MACJ9B,OAAO,CAACC,GAAG,CAAC,SAAS,GAAG6B,CAAC,CAAC;IAC5B,CAAC,CACF;EACH;;AA9FWnE,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAoE;EAAAC;IAAAtD;EAAA;EAAAuD;EAAAC;EAAAC;EAAAC;IAAA;MCb5BC,8BAAwB;MACWA;QAAA,OAASC,gBAAY;MAAA,EAAC;MAACD,iBAAM","names":["L","MapApiComponent","constructor","renderer","http","loadCoor","ngOnInit","ngOnDestroy","mapRef","off","cargaTabla","mapDiv","document","getElementById","map","setView","center","tileLayer","attribution","maxZoom","addTo","addClass","resizeObserver","ResizeObserver","invalidateSize","observe","latlngs","planOptions","addWaypoints","draggableWaypoints","plan","Routing","Plan","control","routeWhileDragging","i","ListCoor","length","console","log","objCoorde","lati","parseFloat","latitud","longi","longitud","num","id","marker","bindPopup","openPopup","push","setWaypoints","hide","get","subscribe","res","listString","feeds","forEach","element","coord","entry_id","toString","field3","field1","hora","field4","e","selectors","inputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Sebastian\\Desktop\\New folder\\servidorMapa\\src\\app\\map-api\\map-api.component.ts","C:\\Users\\Sebastian\\Desktop\\New folder\\servidorMapa\\src\\app\\map-api\\map-api.component.html"],"sourcesContent":["import {  Component, OnDestroy, Renderer2, Input } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet-routing-machine';\r\nimport { DatabaseService } from '../api/database.service';\r\nimport { Coordenadas } from '../interfaces/coordenadas';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Thingspeak } from '../interfaces/thingspeak';\r\n\r\n@Component({\r\n  selector: 'app-map-api',\r\n  templateUrl: './map-api.component.html',\r\n  styleUrls: ['./map-api.component.css']\r\n})\r\nexport class MapApiComponent implements OnDestroy {\r\n  ListCoor: Coordenadas[] = [];\r\n  @Input() center : L.LatLngExpression = [21.910941, -102.316465];\r\n  mapRef: any;\r\n  \r\n  constructor(private renderer: Renderer2, private http: HttpClient) {\r\n    this.loadCoor();\r\n  }\r\n  ngOnInit(){\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mapRef.off('click');\r\n  }\r\n\r\n\r\n  cargaTabla(){\r\n    const mapDiv = document.getElementById('map') as HTMLElement;\r\n    const map = L.map(mapDiv).setView(this.center, 16); \r\n    this.mapRef = map;\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n      maxZoom: 19\r\n    }).addTo(map);\r\n    \r\n    this.renderer.addClass(mapDiv, 'visible');\r\n\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      map.invalidateSize();\r\n    });\r\n    resizeObserver.observe(mapDiv);\r\n\r\n    //Array con coordenadas    \r\n    var latlngs :any = []; \r\n    \r\n    //Código para el Leaflet Routing Machine para mostrar la línea de ruta\r\n    const planOptions = {       \r\n      addWaypoints: false,       \r\n      draggableWaypoints: false     \r\n    }; \r\n\r\n    const plan = new L.Routing.Plan(latlngs, planOptions);\r\n\r\n    const control = L.Routing.control({\r\n      plan,\r\n      addWaypoints: false,\r\n      routeWhileDragging: false\r\n    }).addTo(map);\r\n    \r\n    //divide el array\r\n    for (var i = 0; i < this.ListCoor.length; i++) {\r\n      console.log(\"Entra for\")\r\n      \r\n      var objCoorde = this.ListCoor[i];\r\n      var lati = parseFloat(objCoorde.latitud);\r\n      var longi = parseFloat(objCoorde.longitud);  \r\n      var num = parseFloat(objCoorde.id);\r\n\r\n      if(num==1){\r\n        L.marker([longi, lati]).addTo(map).bindPopup(\"Punto \" + num).openPopup();\r\n      }\r\n      latlngs.push([longi,lati]);\r\n    }\r\n\r\n    control.setWaypoints(latlngs); //Establece los puntos en el mapa\r\n    control.hide();\r\n  }\r\n\r\n  public loadCoor(): void{\r\n    this.http.get<Thingspeak>('https://api.thingspeak.com/channels/2193277/feeds.json?api_key=ZFT84U02EQH0DUTH').subscribe(\r\n      (res) => {\r\n        console.log(res);\r\n        //variable para guardar la conversion de datos json a string\r\n        const listString = res.feeds;\r\n        //concatena los datos que se reciben uno a uno en listString en el arreglo ListCoor\r\n        var i = 0;\r\n        listString.forEach((element) => {\r\n          var coord:Coordenadas = {\r\n            id : element.entry_id.toString(),\r\n            latitud : element.field3,\r\n            longitud : element.field1,\r\n            hora : element.field4\r\n          };\r\n          i++;\r\n          this.ListCoor.push(coord);\r\n          console.log(element); \r\n          console.log(coord);\r\n        });\r\n        console.log(this.ListCoor);\r\n      },\r\n      (e) => {\r\n        console.log('ERROR: ' + e);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"contenedor\">\r\n    <div class=\"map\" id=\"map\" #map (click)=\"cargaTabla()\"></div>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}